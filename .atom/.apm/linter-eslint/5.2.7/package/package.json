{"name":"linter-eslint","main":"./lib/main","activationCommands":[],"version":"5.2.7","description":"Lint JavaScript on the fly, using ESLint","repository":{"type":"git","url":"git+https://github.com/AtomLinter/linter-eslint.git"},"license":"MIT","engines":{"atom":">0.50.0"},"scripts":{"lint":"eslint ."},"dependencies":{"atom-linter":"^4.0.1","atom-package-deps":"^3.0.5","childprocess-promise":"^3.0.0","escape-html":"^1.0.3","eslint":"^1.10.1","resolve-env":"^1.0.0"},"devDependencies":{"babel-eslint":"^4.1.5","eslint-config-airbnb":"^2.1.1","eslint-plugin-import":"^0.12.0","eslint-plugin-react":"^3.10.0","shelljs":"^0.5.3"},"package-deps":["linter"],"providedServices":{"linter":{"versions":{"1.0.0":"provideLinter"}}},"eslintConfig":{"rules":{"no-empty":0,"no-console":0,"no-new":0,"no-extra-semi":1,"semi":[2,"never"],"func-names":0,"strict":[0,"never"],"comma-dangle":0},"extends":"airbnb/base","parser":"babel-eslint","globals":{"atom":"true"},"env":{"es6":true,"node":true}},"readme":"# linter-eslint\n[![Build Status](https://travis-ci.org/AtomLinter/linter-eslint.svg)](https://travis-ci.org/AtomLinter/linter-eslint)\n[![Dependency Status](https://david-dm.org/AtomLinter/linter-eslint.svg)](https://david-dm.org/AtomLinter/linter-eslint)\n\nThis linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides\nan interface to [eslint](http://eslint.org). It will be used with files that\nhave the \"JavaScript\" syntax.\n\n## Installation\n```ShellSession\napm install linter-eslint\n```\n\n`linter-eslint` will look for a version of `eslint` local to your project and\nuse it if it's available. If none is found it will fall back to the version it\nships with.\n\nLets say you depend on a specific version of `eslint`, maybe it has unreleased\nfeatures, maybe it's just newer than what `linter-eslint` ships with. If\n`your-project/node_modules/eslint` exists `linter-eslint` will be used.\nThis package requires an `eslint` of at least v1.0.0.\n\nNote that if you do not have the `linter` package installed it will be installed\nfor you. If you are using an alternative `linter-*` consumer feel free to disable\nthe `linter` package.\n\n## Use with plugins\n\nYou have two options:\n\n* Install locally to your project `eslint` and the plugin\n  * `$ npm i --save-dev eslint [eslint-plugins]`\n\n* Install globaly `eslint` and plugins\n  * `$ npm i -g eslint [eslint-plugins]`\n  * Activate `Use Global Eslint` package option\n  * (Optional) Set `Global Node Path` with `$ npm config get prefix`\n\n## Using ESLint\n\nNote that recent versions of ESLint do not use any rules by-default. This means you have to specify a configuration file for your project!\nTo do this in a straightforward way run this:\n```ShellSession\neslint --init\n```\n\nAlternatively you can create the `.eslintrc` file by yourself. It is a good idea to have a look at the [Get Started With ESLint](http://devnull.guru/get-started-with-eslint/) blog post by [IanVS](https://github.com/IanVS) and [the ESLint documentation](http://eslint.org/docs/user-guide/configuring), including the [list of rules](http://eslint.org/docs/rules/).\n\n## Contributing\n\nIf you would like to contribute enhancements or fixes, please do the following:\n\n0. Fork the plugin repository\n0. Hack on a separate topic branch created from the latest `master`\n0. Commit and push the topic branch\n0. Make a pull request\n0. Welcome to the club!\n\nPlease note that modifications should follow these coding guidelines:\n\n* Indent is 2 spaces\n* Code should pass the `eslint` linter with the provided `.eslintrc`\n* Vertical whitespace helps readability, donâ€™t be afraid to use it\n\nThank you for helping out!\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/AtomLinter/linter-eslint/issues"},"homepage":"https://github.com/AtomLinter/linter-eslint#readme","_id":"linter-eslint@5.2.7","_shasum":"3dadf4f72aabb8cff1094f7909df7fff134b44b8","_resolved":"file:../d-1151129-4647-1cleuda/package.tgz","_from":"../d-1151129-4647-1cleuda/package.tgz"}